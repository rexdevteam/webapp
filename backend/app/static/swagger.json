{
	"swagger": "2.0",
	"info": {
		"title": "Estate Management API",
		"version": "1.0.0",
		"contact": {
			"email": "zeddyemy@gmail.com"
		},
		"description": "You can checkout more details [here](https://github.com/script8888/estate-backend#estate-backend)."
	},
	"schemes":["https", "http"],
	"securityDefinitions": {
		"BaseBearerAuth": {
			"type": "apiKey",
			"in": "header",
			"name": "Authorization",
			"description": "Login as a Base user to use Base API Endpoints"
		},
		"AdminBearerAuth": {
			"type": "apiKey",
			"in": "header",
			"name": "Authorization",
			"description": "Login as an Admin user to use Admin API Endpoints"
		},
		"ManagerBearerAuth": {
			"type": "apiKey",
			"in": "header",
			"name": "Authorization",
			"description": "Login as a Manger user to use Manger API Endpoints"
		},
		"ReceptionBearerAuth": {
			"type": "apiKey",
			"in": "header",
			"name": "Authorization",
			"description": "Login as a Reception user to use Reception API Endpoints"
		},
		"ResidentBearerAuth": {
			"type": "apiKey",
			"in": "header",
			"name": "Authorization",
			"description": "Login as a Resident user to use Resident API Endpoints"
		}
	},
	"tags": [
		{
			"name": "Base",
			"description": "Base API endpoints"
		},
		{
			"name": "Admin",
			"description": "Admin API endpoints"
		},
		{
			"name": "Manager",
			"description": "Manager API endpoints"
		},
		{
			"name": "Resident",
			"description": "Resident API endpoints"
		},
		{
			"name": "Reception",
			"description": "Reception API endpoints"
		}
	],

	"paths": {
		"/api/admin/login": {
			"post": {
				"tags": ["Admin"],
				"summary": "Endpoint for Admin to Login to App",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"schema": {
							"type": "object",
							"properties": {
								"email_phone": { "type": "string" },
								"password": { "type": "string" }
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Login details",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								},
								"data": {
									"type": "object",
									"properties": {
										"access_token": { "type": "string" },
										"user_data": {
											"type": "object",
											"properties": {
												"username": {
													"type": "string"
												},
												"email": { "type": "string" },
												"roles": {
													"type": "array",
													"items": {
														"type": "string"
													},
													"enum": [
														"Admin",
														"Junior Admin",
														"Customer"
													],
													"example": ["Admin"]
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/admin/update_password": {
			"post": {
				"security": [
					{
						"AdminBearerAuth": []
					}
				],
				"tags": ["Admin"],
				"summary": "Endpoint for Admin to Update their Password",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"schema": {
							"type": "object",
							"properties": {
								"password": { "type": "string" },
								"new_password": { "type": "string" }
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Status of the update",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								}
							}
						}
					}
				}
			}
		},

		"/api/admin/stats": {
			"get": {
				"security": [
					{
						"AdminBearerAuth": []
					}
				],
				"tags": ["Admin"],
				"summary": "fetch stat numbers",
				"parameters": [],
				"responses": {
					"200": {
						"description": "data for containing stat numbers",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								},
								"data": {
									"type": "object",
									"properties": {
										"stats": {
											"type": "object",
											"properties": {
												"total_venues": {
													"type": "integer"
												},
												"total_managers": {
													"type": "integer"
												},
												"total_receptions": {
													"type": "integer"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/admin/venues": {
			"get": {
				"security": [
					{
						"AdminBearerAuth": []
					}
				],
				"tags": ["Admin"],
				"summary": "fetch venues on the platform",
				"parameters": [
					{
						"name": "export",
						"in": "query",
						"description": "Specify 'excel' to export data in excel format",
						"required": false,
						"type": "string"
					},
					{
						"name": "search",
						"in": "query",
						"description": "Search Term to use to search for Venues",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "page number for pagination. (Defaults to 1 if not included.)",
						"required": false,
						"type": "integer"
					},
					{
						"name": "per_page",
						"in": "query",
						"description": "number of venues to get per page. (Defaults to 5)",
						"required": false,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "data for containing info for pagination and an array of venue objects",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								},
								"data": {
									"type": "object",
									"properties": {
										"total": { "type": "integer" },
										"current_page": { "type": "integer" },
										"total_pages": { "type": "integer" },
										"venues": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"name": {
														"type": "string"
													},
													"no_of_seats": {
														"type": "string"
													},
													"date_created": {
														"type": "string"
													},
													"managers": {
														"type": "array",
														"items": {
															"type": "object",
															"properties": {
																"email": {
																	"type": "string"
																},
																"phone": {
																	"type": "string"
																},
																"name": {
																	"type": "string"
																},
																"remark": {
																	"type": "string"
																},
																"date_joined": {
																	"type": "string"
																},
																"roles": {
																	"type": "array",
																	"items": {
																		"type": "string"
																	},
																	"enum": [
																		"Manger"
																	],
																	"example": [
																		"Manger"
																	]
																}
															}
														}
													},
													"receptions": {
														"type": "array",
														"items": {
															"type": "object",
															"properties": {
																"email": {
																	"type": "string"
																},
																"phone": {
																	"type": "string"
																},
																"name": {
																	"type": "string"
																},
																"remark": {
																	"type": "string"
																},
																"date_joined": {
																	"type": "string"
																},
																"roles": {
																	"type": "array",
																	"items": {
																		"type": "string"
																	},
																	"enum": [
																		"Reception"
																	],
																	"example": [
																		"Reception"
																	]
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"security": [
					{
						"AdminBearerAuth": []
					}
				],
				"tags": ["Admin"],
				"summary": "Add new venue",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"schema": {
							"type": "object",
							"properties": {
								"name": { "type": "string" },
								"no_of_seats": { "type": "string" },
								"manager_ids": {
									"type": "array",
									"items": { "type": "integer" }
								},
								"reception_ids": {
									"type": "array",
									"items": { "type": "integer" }
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Status of the upload",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								},
								"data": {
									"type": "object",
									"properties": {
										"venue": {
											"type": "object",
											"properties": {
												"name": {
													"type": "string"
												},
												"no_of_seats": {
													"type": "string"
												},
												"date_created": {
													"type": "string"
												},
												"managers": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"email": {
																"type": "string"
															},
															"phone": {
																"type": "string"
															},
															"name": {
																"type": "string"
															},
															"remark": {
																"type": "string"
															},
															"date_joined": {
																"type": "string"
															},
															"roles": {
																"type": "array",
																"items": {
																	"type": "string"
																},
																"enum": [
																	"Manger"
																],
																"example": [
																	"Manger"
																]
															}
														}
													}
												},
												"receptions": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"email": {
																"type": "string"
															},
															"phone": {
																"type": "string"
															},
															"name": {
																"type": "string"
															},
															"remark": {
																"type": "string"
															},
															"date_joined": {
																"type": "string"
															},
															"roles": {
																"type": "array",
																"items": {
																	"type": "string"
																},
																"enum": [
																	"Reception"
																],
																"example": [
																	"Reception"
																]
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/admin/venues/{venue_id}": {
			"get": {
				"security": [
					{
						"AdminBearerAuth": []
					}
				],
				"tags": ["Admin"],
				"summary": "fetch a single venue",
				"parameters": [
					{
						"name": "venue_id",
						"in": "path",
						"description": "unique ID of a venue",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Data for the specified venue ID",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								},
								"data": {
									"type": "object",
									"properties": {
										"venue": {
											"type": "object",
											"properties": {
												"name": {
													"type": "string"
												},
												"no_of_seats": {
													"type": "string"
												},
												"date_created": {
													"type": "string"
												},
												"managers": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"email": {
																"type": "string"
															},
															"phone": {
																"type": "string"
															},
															"name": {
																"type": "string"
															},
															"remark": {
																"type": "string"
															},
															"date_joined": {
																"type": "string"
															},
															"roles": {
																"type": "array",
																"items": {
																	"type": "string"
																},
																"enum": [
																	"Manger"
																],
																"example": [
																	"Manger"
																]
															}
														}
													}
												},
												"receptions": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"email": {
																"type": "string"
															},
															"phone": {
																"type": "string"
															},
															"name": {
																"type": "string"
															},
															"remark": {
																"type": "string"
															},
															"date_joined": {
																"type": "string"
															},
															"roles": {
																"type": "array",
																"items": {
																	"type": "string"
																},
																"enum": [
																	"Reception"
																],
																"example": [
																	"Reception"
																]
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"put": {
				"security": [
					{
						"AdminBearerAuth": []
					}
				],
				"tags": ["Admin"],
				"summary": "Edit a single venue",
				"parameters": [
					{
						"name": "venue_id",
						"in": "path",
						"description": "unique ID of a venue",
						"required": true,
						"type": "string"
					},
					{
						"name": "body",
						"in": "body",
						"schema": {
							"type": "object",
							"properties": {
								"name": { "type": "string" },
								"no_of_seats": { "type": "string" },
								"manager_ids": {
									"type": "array",
									"items": { "type": "integer" }
								},
								"reception_ids": {
									"type": "array",
									"items": { "type": "integer" }
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Status of the update",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								},
								"data": {
									"type": "object",
									"properties": {
										"venue": {
											"type": "object",
											"properties": {
												"name": {
													"type": "string"
												},
												"no_of_seats": {
													"type": "string"
												},
												"date_created": {
													"type": "string"
												},
												"managers": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"email": {
																"type": "string"
															},
															"phone": {
																"type": "string"
															},
															"name": {
																"type": "string"
															},
															"remark": {
																"type": "string"
															},
															"date_joined": {
																"type": "string"
															},
															"roles": {
																"type": "array",
																"items": {
																	"type": "string"
																},
																"enum": [
																	"Manger"
																],
																"example": [
																	"Manger"
																]
															}
														}
													}
												},
												"receptions": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"email": {
																"type": "string"
															},
															"phone": {
																"type": "string"
															},
															"name": {
																"type": "string"
															},
															"remark": {
																"type": "string"
															},
															"date_joined": {
																"type": "string"
															},
															"roles": {
																"type": "array",
																"items": {
																	"type": "string"
																},
																"enum": [
																	"Reception"
																],
																"example": [
																	"Reception"
																]
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"security": [
					{
						"AdminBearerAuth": []
					}
				],
				"tags": ["Admin"],
				"summary": "delete a single venue",
				"parameters": [
					{
						"name": "venue_id",
						"in": "path",
						"description": "unique ID of a venue",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "status on the deletion process",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								}
							}
						}
					}
				}
			}
		},

		"/api/admin/managers": {
			"get": {
				"security": [
					{
						"AdminBearerAuth": []
					}
				],
				"tags": ["Admin"],
				"summary": "Fetch Mangers on the platform",
				"parameters": [
					{
						"name": "export",
						"in": "query",
						"description": "Specify 'excel' to export data in excel format",
						"required": false,
						"type": "string"
					},
					{
						"name": "search",
						"in": "query",
						"description": "Search Term to use to search for managers",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "page number for pagination. (Defaults to 1 if not included.)",
						"required": false,
						"type": "integer"
					},
					{
						"name": "per_page",
						"in": "query",
						"description": "number of venues to get per page. (Defaults to 5)",
						"required": false,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "data for containing info for pagination and an array of manager objects",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								},
								"data": {
									"type": "object",
									"properties": {
										"total": { "type": "integer" },
										"current_page": { "type": "integer" },
										"total_pages": { "type": "integer" },
										"users": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"id": { "type": "integer" },
													"email": {
														"type": "string"
													},
													"phone": {
														"type": "string"
													},
													"name": {
														"type": "string"
													},
													"remark": {
														"type": "string"
													},
													"date_joined": {
														"type": "string"
													},
													"roles": {
														"type": "array",
														"items": {
															"type": "string",
															"enum": ["Manger"],
															"example": [
																"Manger"
															]
														}
													},
													"assigned_venue": {
														"type": "object",
														"properties": {
															"name": {
																"type": "string"
															},
															"no_of_seats": {
																"type": "string"
															},
															"date_created": {
																"type": "string"
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"security": [
					{
						"AdminBearerAuth": []
					}
				],
				"tags": ["Admin"],
				"summary": "Add a New Mangers to the platform",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"schema": {
							"type": "object",
							"properties": {
								"name": { "type": "string" },
								"email": { "type": "string" },
								"phone": { "type": "string" },
								"remark": { "type": "string" }
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "data for the newly added manager",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								},
								"data": {
									"type": "object",
									"properties": {
										"user": {
											"type": "object",
											"properties": {
												"id": { "type": "integer" },
												"email": { "type": "string" },
												"phone": { "type": "string" },
												"name": { "type": "string" },
												"remark": { "type": "string" },
												"date_joined": {
													"type": "string"
												},
												"roles": {
													"type": "array",
													"items": {
														"type": "string",
														"enum": ["Manger"],
														"example": ["Manger"]
													}
												},
												"assigned_venue": {
													"type": "object",
													"properties": {
														"name": {
															"type": "string"
														},
														"no_of_seats": {
															"type": "string"
														},
														"date_created": {
															"type": "string"
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/admin/managers/{manager_id}": {
			"get": {
				"security": [
					{
						"AdminBearerAuth": []
					}
				],
				"tags": ["Admin"],
				"summary": "fetch a single manager on the platform using it's specified ID",
				"parameters": [
					{
						"name": "manager_id",
						"in": "path",
						"description": "unique ID of a manager",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Data for the specified Manager ID",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								},
								"data": {
									"type": "object",
									"properties": {
										"user": {
											"type": "object",
											"properties": {
												"id": { "type": "integer" },
												"email": { "type": "string" },
												"phone": { "type": "string" },
												"name": { "type": "string" },
												"remark": { "type": "string" },
												"date_joined": {
													"type": "string"
												},
												"roles": {
													"type": "array",
													"items": {
														"type": "string",
														"enum": ["Manger"],
														"example": ["Manger"]
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"put": {
				"security": [
					{
						"AdminBearerAuth": []
					}
				],
				"tags": ["Admin"],
				"summary": "Edit a single manager on the platform using it's specified ID",
				"parameters": [
					{
						"name": "manager_id",
						"in": "path",
						"description": "unique ID of a manager",
						"required": true,
						"type": "string"
					},
					{
						"name": "body",
						"in": "body",
						"schema": {
							"type": "object",
							"properties": {
								"name": { "type": "string" },
								"email": { "type": "string" },
								"phone": { "type": "string" },
								"remark": { "type": "string" }
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Data for the updated Manager",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								},
								"data": {
									"type": "object",
									"properties": {
										"user": {
											"type": "object",
											"properties": {
												"id": { "type": "integer" },
												"email": { "type": "string" },
												"phone": { "type": "string" },
												"name": { "type": "string" },
												"remark": { "type": "string" },
												"date_joined": {
													"type": "string"
												},
												"roles": {
													"type": "array",
													"items": {
														"type": "string",
														"enum": ["Manger"],
														"example": ["Manger"]
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"security": [
					{
						"AdminBearerAuth": []
					}
				],
				"tags": ["Admin"],
				"summary": "delete a single manager",
				"parameters": [
					{
						"name": "manager_id",
						"in": "path",
						"description": "unique ID of a manager",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "status on the deletion process",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								}
							}
						}
					}
				}
			}
		},

		"/api/admin/receptions": {
			"get": {
				"security": [
					{
						"AdminBearerAuth": []
					}
				],
				"tags": ["Admin"],
				"summary": "Fetch Receptions on the platform",
				"parameters": [
					{
						"name": "export",
						"in": "query",
						"description": "Specify 'excel' to export data in excel format",
						"required": false,
						"type": "string"
					},
					{
						"name": "search",
						"in": "query",
						"description": "Search Term to use to search for receptions",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "page number for pagination. (Defaults to 1 if not included.)",
						"required": false,
						"type": "integer"
					},
					{
						"name": "per_page",
						"in": "query",
						"description": "number of receptions to get per page. (Defaults to 5)",
						"required": false,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "data for containing info for pagination and an array of reception objects",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								},
								"data": {
									"type": "object",
									"properties": {
										"total": { "type": "integer" },
										"current_page": { "type": "integer" },
										"total_pages": { "type": "integer" },
										"users": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"id": { "type": "integer" },
													"email": {
														"type": "string"
													},
													"phone": {
														"type": "string"
													},
													"name": {
														"type": "string"
													},
													"remark": {
														"type": "string"
													},
													"date_joined": {
														"type": "string"
													},
													"roles": {
														"type": "array",
														"items": {
															"type": "string",
															"enum": [
																"Reception"
															],
															"example": [
																"Reception"
															]
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"security": [
					{
						"AdminBearerAuth": []
					}
				],
				"tags": ["Admin"],
				"summary": "Add a New Mangers to the platform",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"schema": {
							"type": "object",
							"properties": {
								"name": { "type": "string" },
								"email": { "type": "string" },
								"phone": { "type": "string" },
								"remark": { "type": "string" }
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "data for the newly added manager",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								},
								"data": {
									"type": "object",
									"properties": {
										"user": {
											"type": "object",
											"properties": {
												"email": { "type": "string" },
												"phone": { "type": "string" },
												"name": { "type": "string" },
												"remark": { "type": "string" },
												"date_joined": {
													"type": "string"
												},
												"roles": {
													"type": "array",
													"items": {
														"type": "string",
														"enum": ["Manger"],
														"example": ["Manger"]
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/admin/receptions/{reception_id}": {
			"get": {
				"security": [
					{
						"AdminBearerAuth": []
					}
				],
				"tags": ["Admin"],
				"summary": "fetch a single reception on the platform using it's specified ID",
				"parameters": [
					{
						"name": "reception_id",
						"in": "path",
						"description": "unique ID of a reception",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Data for the specified Reception ID",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								},
								"data": {
									"type": "object",
									"properties": {
										"user": {
											"type": "object",
											"properties": {
												"id": { "type": "integer" },
												"email": { "type": "string" },
												"phone": { "type": "string" },
												"name": { "type": "string" },
												"remark": { "type": "string" },
												"date_joined": {
													"type": "string"
												},
												"roles": {
													"type": "array",
													"items": {
														"type": "string",
														"enum": ["Reception"],
														"example": ["Reception"]
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"put": {
				"security": [
					{
						"AdminBearerAuth": []
					}
				],
				"tags": ["Admin"],
				"summary": "Edit a single reception on the platform using it's specified ID",
				"parameters": [
					{
						"name": "reception_id",
						"in": "path",
						"description": "unique ID of a reception",
						"required": true,
						"type": "string"
					},
					{
						"name": "body",
						"in": "body",
						"schema": {
							"type": "object",
							"properties": {
								"name": { "type": "string" },
								"email": { "type": "string" },
								"phone": { "type": "string" },
								"remark": { "type": "string" }
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Data for the updated Reception",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								},
								"data": {
									"type": "object",
									"properties": {
										"user": {
											"type": "object",
											"properties": {
												"id": { "type": "integer" },
												"email": { "type": "string" },
												"phone": { "type": "string" },
												"name": { "type": "string" },
												"remark": { "type": "string" },
												"date_joined": {
													"type": "string"
												},
												"roles": {
													"type": "array",
													"items": {
														"type": "string",
														"enum": ["Reception"],
														"example": ["Reception"]
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"security": [
					{
						"AdminBearerAuth": []
					}
				],
				"tags": ["Admin"],
				"summary": "delete a single reception",
				"parameters": [
					{
						"name": "reception_id",
						"in": "path",
						"description": "unique ID of a reception",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "status on the deletion process",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								}
							}
						}
					}
				}
			}
		},

		"/api/admin/visitors": {
			"get": {
				"security": [
					{
						"AdminBearerAuth": []
					}
				],
				"tags": ["Admin"],
				"summary": "fetch visitors",
				"parameters": [
					{
						"name": "type",
						"in": "query",
						"description": "Specify the type of visitor. The types include, 'invited', 'current', 'past' and 'expired' (use invited to get pending visitors) ",
						"required": false,
						"type": "string"
					},
					{
						"name": "search",
						"in": "query",
						"description": "Search Term to use to search for visitors",
						"required": false,
						"type": "string"
					},
					{
						"name": "export",
						"in": "query",
						"description": "Specify 'excel' to export data in excel format",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "page number for pagination. (Defaults to 1 if not included.)",
						"required": false,
						"type": "integer"
					},
					{
						"name": "per_page",
						"in": "query",
						"description": "number of visitors to get per page. (Defaults to 5)",
						"required": false,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "data for containing info for pagination and an array of visitor objects",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								},
								"data": {
									"type": "object",
									"properties": {
										"total": { "type": "integer" },
										"current_page": { "type": "integer" },
										"total_pages": { "type": "integer" },
										"visitors": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"id": { "type": "integer" },
													"name": {
														"type": "string"
													},
													"phone": {
														"type": "string"
													},
													"remark": {
														"type": "string"
													},
													"date_joined": {
														"type": "string"
													},
													"date_signed_in": {
														"type": "string"
													},
													"date_signed_out": {
														"type": "string"
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/admin/visitors/cancel-invite/{visitor_id}": {
			"patch": {
				"security": [
					{
						"AdminBearerAuth": []
					}
				],
				"tags": ["Admin"],
				"summary": "Sign visitor out.",
				"parameters": [
					{
						"name": "visitor_id",
						"in": "path",
						"description": "unique ID of a visitor",
						"required": true,
						"type": "string"
					},
					{
						"name": "body",
						"in": "body",
						"schema": {
							"type": "object",
							"properties": {
								"venue_id": { "type": "integer" },
								"resident_id": { "type": "integer" }
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Status of the cancelation of visitor invite.",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								}
							}
						}
					}
				}
			}
		},
		"/api/admin/visitors/sign-out/{visitor_id}": {
			"patch": {
				"security": [
					{
						"AdminBearerAuth": []
					}
				],
				"tags": ["Admin"],
				"summary": "Sign visitor out.",
				"parameters": [
					{
						"name": "visitor_id",
						"in": "path",
						"description": "unique ID of a visitor",
						"required": true,
						"type": "string"
					},
					{
						"name": "body",
						"in": "body",
						"schema": {
							"type": "object",
							"properties": {
								"venue_id": { "type": "integer" },
								"resident_id": { "type": "integer" }
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Status of the signing out of visitor.",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								}
							}
						}
					}
				}
			}
		},

		"/api/manager/login": {
			"post": {
				"tags": ["Manager"],
				"summary": "Endpoint for Manager to Login to App",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"schema": {
							"type": "object",
							"properties": {
								"email_phone": { "type": "string" },
								"password": { "type": "string" }
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Login details",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								},
								"data": {
									"type": "object",
									"properties": {
										"access_token": { "type": "string" },
										"user_data": {
											"type": "object",
											"properties": {
												"username": {
													"type": "string"
												},
												"email": { "type": "string" },
												"roles": {
													"type": "array",
													"items": {
														"type": "string"
													},
													"enum": [
														"Admin",
														"Junior Admin",
														"Customer"
													],
													"example": ["Manager"]
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/manager/update_password": {
			"post": {
				"security": [
					{
						"ManagerBearerAuth": []
					}
				],
				"tags": ["Manager"],
				"summary": "Endpoint for manager to Update their Password",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"schema": {
							"type": "object",
							"properties": {
								"password": { "type": "string" },
								"new_password": { "type": "string" }
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Status of the update",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								}
							}
						}
					}
				}
			}
		},

		"/api/manager/stats": {
			"get": {
				"security": [
					{
						"ManagerBearerAuth": []
					}
				],
				"tags": ["Manager"],
				"summary": "fetch stat numbers",
				"parameters": [],
				"responses": {
					"200": {
						"description": "data for containing stat numbers",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								},
								"data": {
									"type": "object",
									"properties": {
										"stats": {
											"type": "object",
											"properties": {
												"total_residents": {
													"type": "integer"
												},
												"total_visitors": {
													"type": "integer"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/manager/residents": {
			"get": {
				"security": [
					{
						"ManagerBearerAuth": []
					}
				],
				"tags": ["Manager"],
				"summary": "fetch residents on the platform",
				"parameters": [
					{
						"name": "export",
						"in": "query",
						"description": "Specify 'excel' to export data in excel format",
						"required": false,
						"type": "string"
					},
					{
						"name": "search",
						"in": "query",
						"description": "Search Term to use to search for residents",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "page number for pagination. (Defaults to 1 if not included.)",
						"required": false,
						"type": "integer"
					},
					{
						"name": "per_page",
						"in": "query",
						"description": "number of residents to get per page. (Defaults to 5)",
						"required": false,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "data for containing info for pagination and an array of resident objects",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								},
								"data": {
									"type": "object",
									"properties": {
										"total": { "type": "integer" },
										"current_page": { "type": "integer" },
										"total_pages": { "type": "integer" },
										"users": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"name": {
														"type": "string"
													},
													"phone": {
														"type": "string"
													},
													"address_room_no": {
														"type": "string"
													},
													"date_created": {
														"type": "string"
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"security": [
					{
						"ManagerBearerAuth": []
					}
				],
				"tags": ["Manager"],
				"summary": "Add new resident",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"schema": {
							"type": "object",
							"properties": {
								"name": { "type": "string" },
								"phone": { "type": "string" },
								"address_room_no": { "type": "string" }
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Status of the upload",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								},
								"data": {
									"type": "object",
									"properties": {
										"user": {
											"type": "object",
											"properties": {
												"id": { "type": "integer" },
												"name": {
													"type": "string"
												},
												"phone": {
													"type": "string"
												},
												"address_room_no": {
													"type": "string"
												},
												"date_joined": {
													"type": "string"
												},
												"roles": {
													"type": "array",
													"items": {
														"type": "string",
														"enum": ["Reception"],
														"example": ["Resident"]
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/manager/residents/resend-code": {
			"get": {
				"security": [
					{
						"ManagerBearerAuth": []
					}
				],
				"tags": ["Manager"],
				"summary": "Resend Code to resident",
				"parameters": [
					{
						"name": "resident_id",
						"in": "query",
						"description": "Id of resident who the code will be sent to",
						"required": false,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "status of the operation",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								}
							}
						}
					}
				}
			}
		},
		"/api/manager/residents/{resident_id}": {
			"get": {
				"security": [
					{
						"ManagerBearerAuth": []
					}
				],
				"tags": ["Manager"],
				"summary": "fetch a single resident using it's specified ID",
				"parameters": [
					{
						"name": "resident_id",
						"in": "path",
						"description": "unique ID of a resident",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Data for the specified Resident ID",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								},
								"data": {
									"type": "object",
									"properties": {
										"user": {
											"type": "object",
											"properties": {
												"id": { "type": "integer" },
												"phone": { "type": "string" },
												"name": { "type": "string" },
												"address_room_no": {
													"type": "string"
												},
												"date_joined": {
													"type": "string"
												},
												"roles": {
													"type": "array",
													"items": {
														"type": "string",
														"enum": ["Reception"],
														"example": ["Resident"]
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"put": {
				"security": [
					{
						"ManagerBearerAuth": []
					}
				],
				"tags": ["Manager"],
				"summary": "Edit a single resident using it's specified ID",
				"parameters": [
					{
						"name": "resident_id",
						"in": "path",
						"description": "unique ID of a resident",
						"required": true,
						"type": "string"
					},
					{
						"name": "body",
						"in": "body",
						"schema": {
							"type": "object",
							"properties": {
								"name": { "type": "string" },
								"phone": { "type": "string" },
								"address_room_no": { "type": "string" }
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Updated Data for the specified Resident ID",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								},
								"data": {
									"type": "object",
									"properties": {
										"user": {
											"type": "object",
											"properties": {
												"id": { "type": "integer" },
												"phone": { "type": "string" },
												"name": { "type": "string" },
												"address_room_no": {
													"type": "string"
												},
												"date_joined": {
													"type": "string"
												},
												"roles": {
													"type": "array",
													"items": {
														"type": "string",
														"enum": ["Reception"],
														"example": ["Resident"]
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"security": [
					{
						"ManagerBearerAuth": []
					}
				],
				"tags": ["Manager"],
				"summary": "Delete a single resident",
				"parameters": [
					{
						"name": "resident_id",
						"in": "path",
						"description": "unique ID of a resident",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "status on the deletion process",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								}
							}
						}
					}
				}
			}
		},
		"/api/manager/visitors": {
			"get": {
				"security": [
					{
						"ManagerBearerAuth": []
					}
				],
				"tags": ["Manager"],
				"summary": "fetch visitors",
				"parameters": [
					{
						"name": "type",
						"in": "query",
						"description": "Specify the type of visitor. The types include, 'invited', 'current', 'past' and 'expired' (use invited to get pending visitors) ",
						"required": false,
						"type": "string"
					},
					{
						"name": "export",
						"in": "query",
						"description": "Specify 'excel' to export data in excel format",
						"required": false,
						"type": "string"
					},
					{
						"name": "search",
						"in": "query",
						"description": "Search Term to use to search for visitors",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "page number for pagination. (Defaults to 1 if not included.)",
						"required": false,
						"type": "integer"
					},
					{
						"name": "per_page",
						"in": "query",
						"description": "number of visitors to get per page. (Defaults to 5)",
						"required": false,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "data for containing info for pagination and an array of visitor objects",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								},
								"data": {
									"type": "object",
									"properties": {
										"total": { "type": "integer" },
										"current_page": { "type": "integer" },
										"total_pages": { "type": "integer" },
										"visitors": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"id": { "type": "integer" },
													"name": {
														"type": "string"
													},
													"phone": {
														"type": "string"
													},
													"remark": {
														"type": "string"
													},
													"date_joined": {
														"type": "string"
													},
													"date_signed_in": {
														"type": "string"
													},
													"date_signed_out": {
														"type": "string"
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},

		"/api/resident/venues": {
			"get": {
				"tags": ["Resident"],
				"summary": "fetch venues of a resident.",
				"parameters": [
					{
						"name": "phone",
						"in": "query",
						"description": "phone number of resident. (to validate phone number and fetch venues associated with the resident)",
						"required": true,
						"type": "string"
					},
					{
						"name": "pwd",
						"in": "query",
						"description": "Password of resident. (to validate resident and fetch venues associated with the resident)",
						"required": true,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "page number for pagination. (Defaults to 1 if not included.)",
						"required": false,
						"type": "integer"
					},
					{
						"name": "per_page",
						"in": "query",
						"description": "number of venues to get per page. (Defaults to 40)",
						"required": false,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "data containing info for pagination and an array of venue objects",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								},
								"data": {
									"type": "object",
									"properties": {
										"total": { "type": "integer" },
										"current_page": { "type": "integer" },
										"total_pages": { "type": "integer" },
										"venues": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"id": { "type": "integer" },
													"name": {
														"type": "string"
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/resident/login": {
			"post": {
				"tags": ["Resident"],
				"summary": "Endpoint for Resident to Login to App",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"schema": {
							"type": "object",
							"properties": {
								"phone": { "type": "string" },
								"venue_id": { "type": "integer" },
								"password": { "type": "string" }
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Login details",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								},
								"data": {
									"type": "object",
									"properties": {
										"access_token": { "type": "string" },
										"user_data": {
											"type": "object",
											"properties": {
												"email": { "type": "string" },
												"phone": { "type": "string" },
												"roles": {
													"type": "array",
													"items": {
														"type": "string"
													},
													"enum": [
														"Admin",
														"Junior Admin",
														"Customer"
													],
													"example": ["Resident"]
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/resident/update_password": {
			"post": {
				"security": [
					{
						"ResidentBearerAuth": []
					}
				],
				"tags": ["Resident"],
				"summary": "Endpoint for resident to Update their Password",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"schema": {
							"type": "object",
							"properties": {
								"password": { "type": "string" },
								"new_password": { "type": "string" }
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Status of the update",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								}
							}
						}
					}
				}
			}
		},
		"/api/resident/visitors": {
			"get": {
				"security": [
					{
						"ResidentBearerAuth": []
					}
				],
				"tags": ["Resident"],
				"summary": "fetch visitors created by the current logged in Resident",
				"parameters": [
					{
						"name": "type",
						"in": "query",
						"description": "Specify the type of visitor. The types include, 'invited', 'current', 'past' and 'expired' ",
						"required": false,
						"type": "string"
					},
					{
						"name": "search",
						"in": "query",
						"description": "Search Term to use to search for visitors",
						"required": false,
						"type": "string"
					},
					{
						"name": "export",
						"in": "query",
						"description": "Specify 'excel' to export data in excel format",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "page number for pagination. (Defaults to 1 if not included.)",
						"required": false,
						"type": "integer"
					},
					{
						"name": "per_page",
						"in": "query",
						"description": "number of visitors to get per page. (Defaults to 5)",
						"required": false,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "data containing info for pagination and an array of visitor objects",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								},
								"data": {
									"type": "object",
									"properties": {
										"total": { "type": "integer" },
										"current_page": { "type": "integer" },
										"total_pages": { "type": "integer" },
										"visitors": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"id": { "type": "integer" },
													"name": {
														"type": "string"
													},
													"phone": {
														"type": "string"
													},
													"remark": {
														"type": "string"
													},
													"date_joined": {
														"type": "string"
													},
													"date_signed_in": {
														"type": "string"
													},
													"date_signed_out": {
														"type": "string"
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"security": [
					{
						"ResidentBearerAuth": []
					}
				],
				"tags": ["Resident"],
				"summary": "Add New visitors",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"name": { "type": "string" },
									"phone": { "type": "string" },
									"remark": { "type": "string" }
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Status of the upload",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								},
								"data": {
									"type": "object",
									"properties": {
										"visitors": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"id": { "type": "integer" },
													"name": {
														"type": "string"
													},
													"phone": {
														"type": "string"
													},
													"date_created": {
														"type": "string"
													},
													"date_signed_in": {
														"type": "string"
													},
													"date_signed_out": {
														"type": "string"
													},
													"resident_id": {
														"type": "integer"
													},
													"venue_id": {
														"type": "integer"
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/resident/visitors/resend-invite": {
			"get": {
				"security": [
					{
						"ResidentBearerAuth": []
					}
				],
				"tags": ["Resident"],
				"summary": "Resend invite to visitor",
				"parameters": [
					{
						"name": "visitor_id",
						"in": "query",
						"description": "Id of visitor who the code will be sent to",
						"required": false,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "status of the operation",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								}
							}
						}
					}
				}
			}
		},
		"/api/resident/visitors/cancel-invite/{visitor_id}": {
			"patch": {
				"security": [
					{
						"ResidentBearerAuth": []
					}
				],
				"tags": ["Resident"],
				"summary": "Sign visitor out.",
				"parameters": [
					{
						"name": "visitor_id",
						"in": "path",
						"description": "unique ID of a visitor",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Status of the cancelation of visitor invite.",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								}
							}
						}
					}
				}
			}
		},
		"/api/resident/visitors/sign-out/{visitor_id}": {
			"patch": {
				"security": [
					{
						"ResidentBearerAuth": []
					}
				],
				"tags": ["Resident"],
				"summary": "Sign visitor out.",
				"parameters": [
					{
						"name": "visitor_id",
						"in": "path",
						"description": "unique ID of a visitor",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Status of the signing out of visitor.",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								}
							}
						}
					}
				}
			}
		},
		"/api/resident/visitors/re-invite/{visitor_id}": {
			"post": {
				"security": [
					{
						"ResidentBearerAuth": []
					}
				],
				"tags": ["Resident"],
				"summary": "Re invite a visitor.",
				"parameters": [
					{
						"name": "visitor_id",
						"in": "path",
						"description": "unique ID of a visitor",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Status of the re-invitation.",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								},
								"data":{
									"type":"object",
									"properties": {
										"visitor": {
											"type": "object",
											"properties": {
												"id": { "type": "integer" },
												"name": {
													"type": "string"
												},
												"phone": {
													"type": "string"
												},
												"remark": {
													"type": "string"
												},
												"date_joined": {
													"type": "string"
												},
												"date_signed_in": {
													"type": "string"
												},
												"date_signed_out": {
													"type": "string"
												},
												"expected_sign_out": {
													"type": "string"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},

		"/api/reception/login": {
			"post": {
				"tags": ["Reception"],
				"summary": "Endpoint for Reception to Login to App",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"schema": {
							"type": "object",
							"properties": {
								"email_phone": { "type": "string" },
								"password": { "type": "string" }
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Login details",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								},
								"data": {
									"type": "object",
									"properties": {
										"access_token": { "type": "string" },
										"user_data": {
											"type": "object",
											"properties": {
												"username": {
													"type": "string"
												},
												"email": { "type": "string" },
												"roles": {
													"type": "array",
													"items": {
														"type": "string"
													},
													"enum": [
														"Admin",
														"Junior Admin",
														"Customer"
													],
													"example": ["Reception"]
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/reception/visitors": {
			"get": {
				"security": [
					{
						"ResidentBearerAuth": []
					}
				],
				"tags": ["Reception"],
				"summary": "fetch visitors associated with the current logged in Reception",
				"parameters": [
					{
						"name": "type",
						"in": "query",
						"description": "Specify the type of visitor. The types include,  'current' and 'past' (use current to get admitted visitors) ",
						"required": false,
						"type": "string"
					},
					{
						"name": "search",
						"in": "query",
						"description": "Search Term to use to search for visitors",
						"required": false,
						"type": "string"
					},
					{
						"name": "export",
						"in": "query",
						"description": "Specify 'excel' to export data in excel format",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "page number for pagination. (Defaults to 1 if not included.)",
						"required": false,
						"type": "integer"
					},
					{
						"name": "per_page",
						"in": "query",
						"description": "number of visitors to get per page. (Defaults to 5)",
						"required": false,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "data for containing info for pagination and an array of visitor objects",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								},
								"data": {
									"type": "object",
									"properties": {
										"total": { "type": "integer" },
										"current_page": { "type": "integer" },
										"total_pages": { "type": "integer" },
										"visitors": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"id": { "type": "integer" },
													"name": {
														"type": "string"
													},
													"phone": {
														"type": "string"
													},
													"remark": {
														"type": "string"
													},
													"date_joined": {
														"type": "string"
													},
													"date_signed_in": {
														"type": "string"
													},
													"date_signed_out": {
														"type": "string"
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},

		"/api/reception/visitors/admit": {
			"patch": {
				"security": [
					{
						"ReceptionBearerAuth": []
					}
				],
				"tags": ["Reception"],
				"summary": "Admit visitors in using provided code",
				"parameters": [
					{
						"name": "body",
						"in": "body",
						"schema": {
							"type": "object",
							"properties": {
								"code": { "type": "string" }
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Status of the admission. visitor info is also included.",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								},
								"data": {
									"type": "object",
									"properties": {
										"visitor": {
											"type": "object",
											"properties": {
												"phone": { "type": "string" },
												"name": { "type": "string" },
												"remark": { "type": "string" },
												"resident_id": {
													"type": "integer"
												},
												"venue_id": {
													"type": "integer"
												},
												"date_created": {
													"type": "string"
												},
												"date_signed_in": {
													"type": "string"
												},
												"date_signed_out": {
													"type": "string"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/api/reception/visitors/sign-out/{visitor_id}": {
			"patch": {
				"security": [
					{
						"ReceptionBearerAuth": []
					}
				],
				"tags": ["Reception"],
				"summary": "Sign visitor out.",
				"parameters": [
					{
						"name": "visitor_id",
						"in": "path",
						"description": "unique ID of a visitor",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "Status of the signing out of visitor.",
						"schema": {
							"type": "object",
							"properties": {
								"message": { "type": "string" },
								"status": {
									"type": "string",
									"enum": ["success", "failed"],
									"example": "success"
								},
								"status_code": {
									"type": "integer",
									"enum": [200, 400, 409],
									"example": 200
								}
							}
						}
					}
				}
			}
		}
	}
}
